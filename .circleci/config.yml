version: 2.0

references:

  install_python: &install_python
    run:
      name: Install Python
      command: |
        sudo add-apt-repository ppa:jonathonf/python-$PYTHON_VER
        sudo apt-get update -qq --fix-missing
        sudo apt-get install -y wget python$PYTHON_VER python$PYTHON_VER-dev
        # sudo update-alternatives --install /usr/bin/python python /usr/bin/python$PYTHON_VER 1
        wget https://bootstrap.pypa.io/get-pip.py
        sudo python$PYTHON_VER get-pip.py
        pwd ; ls -l
        python$PYTHON_VER --version ; pip$PYTHON_VER --version

  install_pips: &install_pips
    run:
      name: Install PyPI dependences
      command: |
        sudo pip$PYTHON_VER install numpy==1.14
        pip$PYTHON_VER install -r requirements.txt --user
        sudo pip$PYTHON_VER install -r tests/requirements.txt
        pip$PYTHON_VER list

  test_coverage: &test_coverage
    run:
      name: Testing and Formating
      command: |
        python$PYTHON_VER setup.py check -m -s
        python$PYTHON_VER setup.py build_ext --inplace
        python$PYTHON_VER setup.py install --dry-run --user
        coverage run --source keras_retinanet -m py.test keras_retinanet tests --doctest-modules --flake8
      no_output_timeout: 30m

jobs:

  Py3:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      - PYTHON_VER: "3.6"
    steps: &steps
      - checkout
      # INSTALLATION
      - *install_python
      - *install_pips
      # TESTING
      - *test_coverage

      # PASSING
      - run:
          name: Finalise
          command: |
            coverage xml && codecov
            coverage report && coverage xml -o test-reports/coverage.xml
      # RESULTS
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports


workflows:
  version: 2
  build:
    jobs:
      - Py3
